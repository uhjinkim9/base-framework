@use "@/styles/variables.scss" as *;
@use "@/styles/common.scss" as *;

// List
.listWrapper {
  display: flex;
  flex-direction: column;
  height: 100%;
  min-height: 100%;
  gap: 1rem;
}

// 그룹 행 스타일
.groupRow {
  &:hover {
    background-color: rgba($u-orange, 0.05);
  }
}

.selectedRow {
  background-color: rgba($u-orange, 0.1);
  border-left: 3px solid $u-orange;
}

.listContainer {
  width: 100%;
  flex: 1;
  display: flex;
  flex-direction: column;
}

.listHeader {
  @extend .row;
  padding: 0.3rem 1rem 0.5rem;
  border-bottom: 1px solid black;
  justify-content: space-between;
}

.emptyList {
  @extend .subTextGray;
  text-align: center;
  margin: 2rem 2rem;
}

// ListLine
.lineWrapper {
  display: grid;
  grid-template-columns: 0.3fr 0.3fr 0.3fr 0.3fr 0.3fr 0.3fr 0.3fr;
  grid-template-areas: "check menuId menuNm upperNode isUsed seqNum editBtn";
  text-align: center;
  align-items: center;
  gap: 0.5rem;
  padding: 0.8rem 0.1rem 0.8rem;
  min-height: 1rem;
  border-bottom: 1px solid $gray1;
  border-left: 3px solid transparent; // 기본적으로 투명한 보더 설정

  .check {
    grid-area: check;
  }
  .menuId {
    @extend .subTextBlack;
    grid-area: menuId;
  }
  .menuNm {
    @extend .subTextBlack;
    grid-area: menuNm;
  }
  .upperNode {
    @extend .subTextBlack;
    grid-area: upperNode;
  }
  .isUsed {
    @extend .subTextBlack;
    grid-area: isUsed;
  }
  .seqNum {
    @extend .subTextBlack;
    grid-area: seqNum;
  }
  .editBtn {
    @extend .subTextBlack;
    grid-area: editBtn;
  }

  // 선택된 항목 스타일
  &.selected {
    background-color: rgba($u-orange, 0.1);
    border-left-color: $u-orange; // 투명한 보더의 색상만 변경
  }

  // 호버 효과
  &:hover:not(.headerRow) {
    background-color: rgba($u-orange, 0.1);
  }
}

.headerRow {
  background-color: $gray1;
  padding: 0.75rem 0.1rem;
  border-bottom: 1px solid $gray2;

  .check,
  .menuId,
  .menuNm,
  .upperNode,
  .isUsed,
  .seqNum,
  .editBtn {
    @extend .subTextGray;
    font-weight: 600;
  }
}
